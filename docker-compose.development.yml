services:
  postgres:
    image: "postgres:14.7-alpine"
    restart: unless-stopped
    container_name: "postgres"
    env_file: ./.env.docker
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3

    profiles:
      - all

  rabbitmq:
    image: rabbitmq:4-management-alpine
    restart: unless-stopped
    container_name: rabbitmq
    env_file: ./.env.docker
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3

    profiles:
      - all

  redis:
    image: redis/redis-stack
    restart: unless-stopped
    container_name: redis
    env_file: ./.env.docker
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

    profiles:
      - all

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.development
    restart: unless-stopped
    container_name: scheduler
    env_file: ./.env.docker
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

    develop:
      watch:
        - action: sync
          path: ./
          target: /app/
          ignore:
            - .gitignore
            - .github
            - test/
            - tmp/
            - bin/
            - docker*
            - "*_test.go"
        - action: rebuild
          path: ./env*
          target: /app/
          ignore:
            - "!.env*"

    profiles:
      - all
      - single

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    container_name: ngrok
    command:
      - "http"
      - "--url=${NGROK_URL}"
      - "http://scheduler:${PORT}"
    env_file: ./.env.docker
    ports:
      - 4040:4040

    profiles:
      - all

networks:
  default:
    name: scheduler
    driver: bridge
