services:
  postgres:
    image: "postgres:14.7-alpine"
    restart: unless-stopped
    container_name: "postgres"
    env_file: ./.env.docker
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3

    profiles: [scheduler_dev]

  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    env_file: ./.env.docker
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile.development
    restart: unless-stopped
    container_name: app
    env_file: ./.env.docker
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

    develop:
      watch:
        - action: sync
          path: ./
          target: /app/
          ignore:
            - .gitignore
            - .github
            - test/
            - tmp/
            - bin/
            - docker*
        - action: rebuild
          path: ./env*
          target: /app/
          ignore:
            - "!.env*"

    profiles: [scheduler_dev]

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    container_name: ngrok
    command:
      - "http"
      - "--url=${NGROK_URL}"
      - "http://app:${PORT}"
    env_file: ./.env.docker
    ports:
      - 4040:4040

    profiles: [scheduler_dev]
